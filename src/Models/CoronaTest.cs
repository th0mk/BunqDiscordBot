// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var temperatures = Results.FromJson(jsonString);

namespace Bot.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Results
    {
        [JsonProperty("afnamedatum")]
        public DateTime Afnamedatum { get; set; }

        [JsonProperty("uitslagdatum")]
        public DateTime? Uitslagdatum { get; set; }

        [JsonProperty("resultaat")]
        public string Resultaat { get; set; }

        [JsonProperty("afspraakStatus")]
        public string AfspraakStatus { get; set; }

        [JsonProperty("afspraakId")]
        public long AfspraakId { get; set; }
    }

    public partial class CoronaResults
    {
        public static Results[] FromJson(string json) => JsonConvert.DeserializeObject<Results[]>(json, CoronaConverter.Settings);
    }

    public static class CoronaSerialize
    {
        public static string ToJson(this CoronaResults[] self) => JsonConvert.SerializeObject(self, CoronaConverter.Settings);
    }

    internal static class CoronaConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}